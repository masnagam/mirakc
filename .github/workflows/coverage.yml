name: coverage

on:
  workflow_run:
    workflows:
      - ci
      - pull-request
    types:
      - completed

jobs:
  coverage:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@v3
        with:
          # We have to specify head_sha explicitly.
          # Because GITHUB_SHA points to the last commit on the default branch.
          # See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
          ref: ${{ github.event.workflow_run.head_sha }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Clean
        run: |
          cargo clean
      - name: Run coverage tests
        run: |
          # Compiling actlet-derive fails due to the following error:
          #
          #   error: the linked panic runtime `panic_unwind` is not compiled
          #     with this crate's panic strategy `abort`
          #
          # So, we excludes it from the coverage.
          cargo test --all-features --no-fail-fast --lib --workspace --exclude=actlet-derive
        env:
          # See https://github.com/mozilla/grcov#usage
          RUSTC_BOOTSTRAP: 1
          # See https://github.com/mozilla/grcov#example-how-to-generate-gcda-files-for-a-rust-project
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: >-
            -Zprofile
            -Ccodegen-units=1
            -Cinline-threshold=0
            -Clink-dead-code
            -Coverflow-checks=off
            -Cpanic=abort
            -Zpanic_abort_tests
          RUSTDOCFLAGS: >-
            -Cpanic=abort
      - name: Install cargo-binstall
        run: |
          BINSTALL_URL=https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz
          curl -fsSL $BINSTALL_URL | tar -xz -C ~/.cargo/bin --no-same-owner
      - name: Install grcov
        run: |
          cargo binstall --no-confirm grcov
      - name: Generate coverage data
        run: >-
          grcov target/debug --branch --llvm --ignore-not-existing -s .
          --ignore '*/src/main.rs' --ignore 'mirakc-core/src/error.rs'
          --ignore 'mirakc-core/src/tracing_ext.rs'
          --excl-line '<coverage:exclude/>|unimplemented!|unreachable!'
          --excl-start '<coverage:exclude>'
          --excl-stop '</coverage:exclude>'
          --excl-br-start '<coverage:exclude>'
          --excl-br-stop '</coverage:exclude>'
          -t lcov -o lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
